@mixin surface-theme($type) {
    &[data-surface-theme="#{$type}"] {
        --color-surface-bg: var(--color-#{$type});
        --color-surface-text: var(--color-#{$type}-text);
        --color-surface-bg-interact: color-mix(in oklch, var(--color-surface-bg) 95%, oklch(from var(--color-surface-text) clamp(calc(var(--color-surface-bg-lightness, l) + 0.025), calc((var(--color-surface-bg-lightness, l) - var(--threshold)) * -100), calc(var(--color-surface-bg-lightness, l) - 0.025)) c h) 5%);
        .btn-outline {
            --button-color: var(--color-surface-text);
            --button-color-hover: oklch(from var(--button-color) clamp(var(--lightest-text), calc((var(--button-color-lightness, l) - var(--threshold)) * -100), var(--darkest-text)) c h);
        }
    }
}

:where(.surface, .region, .quote, .card, .p-card, .hero) {
    background-color: var(--color-surface-bg);
    color: var(--color-surface-text);    
    &:is([data-surface-interact="true"]) {
        &:hover {
            background-color: var(--color-surface-bg-interact);
        }
    }    
    @include surface-theme(light);
    @include surface-theme(dark);
    @include surface-theme(primary);
    @include surface-theme(primary-light);
    @include surface-theme(primary-dark);
    @include surface-theme(secondary);
    @include surface-theme(secondary-light);
    @include surface-theme(secondary-dark);
    @include surface-theme(accent);
    @include surface-theme(accent-light);
    @include surface-theme(accent-dark);                  
}

