/* calculations */
@layer components {
  .layout-grid {
    --column-count: 4;
    --layout-grid-min: var(--layout-column-min);
    --layout-grid-gap: var(--layout-gap);
    --layout-grid-template-columns: repeat(var(--layout-grid-auto-repeat, auto-fit), minmax(min(100%, var(--layout-grid-min)), 1fr));
    display: grid;
    grid-template-columns: var(--layout-grid-template-columns);
    gap: var(--layout-grid-gap);
  }
  .layout-grid.layout-grid--column-count {
    --column-count: 4;
    --breakpoint: calc(var(--layout-grid-min) * var(--column-count) + var(--layout-grid-gap) * (var(--column-count) - 1));
    --column-size: calc(100% / var(--column-count) - var(--layout-grid-gap));
    --layout-grid-template-columns: repeat(
        var(--layout-grid-auto-repeat, auto-fit),
        minmax(
            min(
                max(var(--column-size), (100% - var(--breakpoint)) * -999),
                100%
            ),
            1fr
        )
    );
  }
  .flex-layout-grid {
    display: flex;
    flex-wrap: wrap;
    gap: var(--flex-grid-gap);
  }
  .flex-layout-grid > * {
    flex: 1 1 var(--flex-grid-min);
  }
  :is(.layout) {
    container: layout-container/inline-size;
  }
  :is(.layout-grid, .flex-layout-grid) > * {
    container: var(--grid-item-container, grid-item)/inline-size;
  }
}
